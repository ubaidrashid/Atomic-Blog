{"ast":null,"code":"// PostContextProc.js\nimport React,{createContext,useState}from'react';import{faker}from\"@faker-js/faker\";import{jsx as _jsx}from\"react/jsx-runtime\";const PostContext=/*#__PURE__*/createContext();function createRandomPost(){return{title:`${faker.hacker.adjective()} ${faker.hacker.noun()}`,body:faker.hacker.phrase()};}function PostContextProc(_ref){let{children}=_ref;const[searchQuery,setSearchQuery]=useState(\"\");const[posts,setPosts]=useState(()=>Array.from({length:30},()=>createRandomPost()));function handleAddPost(post){setPosts(posts=>[post,...posts]);}function handleClearPosts(){setPosts([]);}const searchedPosts=searchQuery.length>0?posts.filter(post=>`${post.title} ${post.body}`.toLowerCase().includes(searchQuery.toLowerCase())):posts;return/*#__PURE__*/_jsx(PostContext.Provider,{value:{posts:searchedPosts,onClearPosts:handleClearPosts,searchQuery:searchQuery,setSearchQuery:setSearchQuery,onAddPost:handleAddPost},children:children});}export{PostContext,PostContextProc,createRandomPost};","map":{"version":3,"names":["React","createContext","useState","faker","jsx","_jsx","PostContext","createRandomPost","title","hacker","adjective","noun","body","phrase","PostContextProc","_ref","children","searchQuery","setSearchQuery","posts","setPosts","Array","from","length","handleAddPost","post","handleClearPosts","searchedPosts","filter","toLowerCase","includes","Provider","value","onClearPosts","onAddPost"],"sources":["E:/documents/AtomicBlog-by_oss/atomic-blo/src/PostContextProc.js"],"sourcesContent":["// PostContextProc.js\r\n\r\nimport React, { createContext, useState } from 'react';\r\nimport { faker } from \"@faker-js/faker\";\r\n\r\nconst PostContext = createContext();\r\n\r\nfunction createRandomPost() {\r\n    return {\r\n        title: `${faker.hacker.adjective()} ${faker.hacker.noun()}`,\r\n        body: faker.hacker.phrase(),\r\n    };\r\n}\r\n\r\nfunction PostContextProc({ children }) {\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    \r\n    const [posts, setPosts] = useState(() =>\r\n        Array.from({ length: 30 }, () => createRandomPost())\r\n    );\r\n\r\n    function handleAddPost(post) {\r\n        setPosts((posts) => [post, ...posts]);\r\n    }\r\n\r\n    function handleClearPosts() {\r\n        setPosts([]);\r\n    }\r\n\r\n    const searchedPosts =\r\n        searchQuery.length > 0\r\n            ? posts.filter((post) =>\r\n                `${post.title} ${post.body}`\r\n                    .toLowerCase()\r\n                    .includes(searchQuery.toLowerCase())\r\n            )\r\n            : posts;\r\n\r\n    return (\r\n        <PostContext.Provider value={{\r\n            posts: searchedPosts,\r\n            onClearPosts: handleClearPosts,\r\n            searchQuery: searchQuery,\r\n            setSearchQuery: setSearchQuery,\r\n            onAddPost: handleAddPost\r\n        }}>\r\n            {children}\r\n        </PostContext.Provider>\r\n    );\r\n}\r\n\r\nexport { PostContext, PostContextProc, createRandomPost };\r\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,KAAQ,OAAO,CACtD,OAASC,KAAK,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExC,KAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAEnC,QAAS,CAAAM,gBAAgBA,CAAA,CAAG,CACxB,MAAO,CACHC,KAAK,CAAE,GAAGL,KAAK,CAACM,MAAM,CAACC,SAAS,CAAC,CAAC,IAAIP,KAAK,CAACM,MAAM,CAACE,IAAI,CAAC,CAAC,EAAE,CAC3DC,IAAI,CAAET,KAAK,CAACM,MAAM,CAACI,MAAM,CAAC,CAC9B,CAAC,CACL,CAEA,QAAS,CAAAC,eAAeA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACjC,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAElD,KAAM,CAACiB,KAAK,CAAEC,QAAQ,CAAC,CAAGlB,QAAQ,CAAC,IAC/BmB,KAAK,CAACC,IAAI,CAAC,CAAEC,MAAM,CAAE,EAAG,CAAC,CAAE,IAAMhB,gBAAgB,CAAC,CAAC,CACvD,CAAC,CAED,QAAS,CAAAiB,aAAaA,CAACC,IAAI,CAAE,CACzBL,QAAQ,CAAED,KAAK,EAAK,CAACM,IAAI,CAAE,GAAGN,KAAK,CAAC,CAAC,CACzC,CAEA,QAAS,CAAAO,gBAAgBA,CAAA,CAAG,CACxBN,QAAQ,CAAC,EAAE,CAAC,CAChB,CAEA,KAAM,CAAAO,aAAa,CACfV,WAAW,CAACM,MAAM,CAAG,CAAC,CAChBJ,KAAK,CAACS,MAAM,CAAEH,IAAI,EAChB,GAAGA,IAAI,CAACjB,KAAK,IAAIiB,IAAI,CAACb,IAAI,EAAE,CACvBiB,WAAW,CAAC,CAAC,CACbC,QAAQ,CAACb,WAAW,CAACY,WAAW,CAAC,CAAC,CAC3C,CAAC,CACCV,KAAK,CAEf,mBACId,IAAA,CAACC,WAAW,CAACyB,QAAQ,EAACC,KAAK,CAAE,CACzBb,KAAK,CAAEQ,aAAa,CACpBM,YAAY,CAAEP,gBAAgB,CAC9BT,WAAW,CAAEA,WAAW,CACxBC,cAAc,CAAEA,cAAc,CAC9BgB,SAAS,CAAEV,aACf,CAAE,CAAAR,QAAA,CACGA,QAAQ,CACS,CAAC,CAE/B,CAEA,OAASV,WAAW,CAAEQ,eAAe,CAAEP,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}